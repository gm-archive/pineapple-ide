/*
 * GameSettingsDialog.java
 *
 * Created on 28 de Dezembro de 2008, 15:15
 */

package org.gcreator.gui;

import java.util.Arrays;
import java.util.Hashtable;
import java.util.Vector;
import javax.swing.AbstractListModel;
import org.gcreator.gui.validators.SceneValidator;
import org.gcreator.project.Project;
import org.gcreator.project.ProjectElement;
import org.gcreator.project.ProjectFile;
import org.gcreator.project.ProjectFolder;
import org.gcreator.project.io.BasicFile;

/**
 * Sets the settings of the game in a visually appealing way
 * @author Lu√≠s Reis
 */
public class GameSettingsDialog extends javax.swing.JDialog {
    private static final long serialVersionUID = 8008329836505148430L;
    private Project p = null;
    private Vector<BasicFile> sceneOrder = new Vector<BasicFile>();

    /** Creates new form GameSettingsDialog
     * @param parent The parent of this dialog
     * @param modal Whether this dialog is modal or not
     * @param p The project to edit
     */
    public GameSettingsDialog(java.awt.Frame parent, boolean modal, Project p) {
        super(parent, modal);
        initComponents();
        this.p = p;
        Hashtable<String, String> settings = p.getSettings();
        String st = settings.get("game-fullscreen");
        System.out.println("st="+st);
        if(st!=null&&st.equals("true")){
            System.out.println("enabling");
            jCheckBox1.setSelected(true);
        }
        st = settings.get("game-resizable");
        if(st!=null&&st.equals("true")){
            jCheckBox2.setSelected(true);
        }
        st = settings.get("game-optimize");
        if(st!=null&&st.equals("false")){
            jCheckBox3.setSelected(false);
        }
        String s = settings.get("scene-order");
        if(s!=null){
            String[] scenes = s.split(";");
            for(String scene : scenes){
                sceneOrder.add(getScene(scene, p));
            }
        }
        jList1.setModel(new AbstractListModel(){
            private static final long serialVersionUID = 1L;
            public Object getElementAt(int index){
                return sceneOrder.get(index);
            }
            public int getSize(){
                return sceneOrder.size();
            }
        });
        jList1.setCellRenderer(new BasicFileRenderer());
        resourceChooser1.setResourceValidator(new SceneValidator());
    }
    
    private BasicFile getScene(String scene, Project p){
        for(ProjectElement elem : p.getFiles()){
            if(elem instanceof ProjectFile){
                if(elem.getFile().getPath().equals(scene)){
                    return elem.getFile();
                }
            }
            else if(elem instanceof ProjectFolder){
                BasicFile f = getScene(scene, (ProjectFolder) elem);
                if(f!=null){
                    return f;
                }
            }
        }
        return null;
    }
    
    private BasicFile getScene(String scene, ProjectFolder p){
        for(ProjectElement elem : p.getChildren()){
            if(elem instanceof ProjectFile){
                if(elem.getFile().getPath().equals(scene)){
                    return elem.getFile();
                }
            }
            else if(elem instanceof ProjectFolder){
                BasicFile f = getScene(scene, (ProjectFolder) elem);
                if(f!=null){
                    return f;
                }
            }
        }
        return null;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        resourceChooser1 = new org.gcreator.gui.ResourceChooser();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Game Settings");

        jLabel1.setText("Changes to the game settings are applied automatically");
        getContentPane().add(jLabel1, java.awt.BorderLayout.PAGE_START);

        jCheckBox1.setText("Run in fullscreen mode");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Allow the player to resize the window");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setSelected(true);
        jCheckBox3.setText("Optimize game executable");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox3))
                .addContainerGap(127, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox3)
                .addContainerGap(162, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("General Settings", jPanel1);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.add(resourceChooser1);

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);

        jButton2.setText("Remove");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);

        jButton3.setText("Move Up");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3);

        jButton4.setText("Move Down");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton4);

        jPanel2.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jScrollPane1.setViewportView(jList1);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Scene Order", jPanel2);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
    System.out.println("saving");
    p.getSettings().put("game-fullscreen", jCheckBox1.isSelected()?"true":"false");
}//GEN-LAST:event_jCheckBox1ActionPerformed

private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
    p.getSettings().put("game-resizable", jCheckBox2.isSelected()?"true":"false");
}//GEN-LAST:event_jCheckBox2ActionPerformed

private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
    p.getSettings().put("game-optimize", jCheckBox3.isSelected()?"true":"false");
}//GEN-LAST:event_jCheckBox3ActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    BasicFile f = resourceChooser1.getSelectedFile();
    if(f!=null){
        sceneOrder.add(f);
        jList1.updateUI();
        updateSceneOrder();
    }
}//GEN-LAST:event_jButton1ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    int indexes[] = jList1.getSelectedIndices();
    Arrays.sort(indexes);
    int shift = 0;
    for(int index : indexes){
        sceneOrder.remove(index-shift);
        shift++;
    }
    updateSceneOrder();
    jList1.updateUI();
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    int selObj = jList1.getSelectedIndex();
    if(selObj<1){ return; }
    BasicFile o = sceneOrder.get(selObj-1);
    sceneOrder.set(selObj-1, sceneOrder.get(selObj));
    sceneOrder.set(selObj, o);
    updateSceneOrder();
    jList1.updateUI();
}//GEN-LAST:event_jButton3ActionPerformed

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    int selObj = jList1.getSelectedIndex();
    if(selObj<0||selObj>=sceneOrder.size()-1){ return; }
    BasicFile o = sceneOrder.get(selObj+1);
    sceneOrder.set(selObj+1, sceneOrder.get(selObj));
    sceneOrder.set(selObj, o);
    updateSceneOrder();
    jList1.updateUI();
}//GEN-LAST:event_jButton4ActionPerformed

public void updateSceneOrder(){
    String sceneList = "";
    boolean isFirst = true;
    for(BasicFile f : sceneOrder){
        if(!isFirst){
            sceneList += ";";
        }
        sceneList += f.getPath();
        isFirst = false;
    }
    p.getSettings().put("scene-order", sceneList);
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private org.gcreator.gui.ResourceChooser resourceChooser1;
    // End of variables declaration//GEN-END:variables

}
